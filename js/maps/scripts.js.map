{"version":3,"sources":["scripts.js"],"names":[],"mappingsfile":"../scripts.js","sourcesContent":["$(document).ready(function(){\n\n  // ==============================================================*/\n  // Remove class for other funtions to check if document is ready\n  // ==============================================================*/\n\n  $('body').removeClass('loading');\n\n  // ==============================================================*/\n  // Create node and insert SVG file after the body\n  // ==============================================================*/\n\n  // Remove local file and uncomment below once on the dev server\n  // https://css-tricks.com/ajaxing-svg-sprite/ for reference\n\n  $.get(\"./img/spritemap.svg\", function(data) {\n    \n    var div = document.createElement(\"div\");\n\n    div.style.display = 'none';\n    div.innerHTML = new XMLSerializer().serializeToString(data.documentElement);\n    \n    document.body.insertBefore(div, document.body.childNodes[0]);\n\n  });\n\n  // ==============================================================*/\n  // Menu visibility\n  // ==============================================================*/\n\n  $('.menu-button').on('click', function(e){\n\n    e.preventDefault();\n\n    $('body, .navigation, .main-container').toggleClass('open');\n\n  });\n\n  $('.main-container, .navigation a').on('click', function(e){\n\n    $('body, .navigation, .main-container').removeClass('open');\n\n  });\n\n  // ==============================================================*/\n  // Range slider configurations\n  // ==============================================================*/\n\n  var $document = $(document),\n      $selector = '[data-range-slider]',\n      $element = $($selector);\n\n  // For ie8 support\n  var textContent = ('textContent' in document) ? 'textContent' : 'innerText';\n\n  // Functionality to retrienve value feedback\n  function valueOutput(element) {\n      var value = element.value;\n  }\n\n  rangeSliderInit();\n\n  $(window).on('resize',function(e){\n\n    if ( $(window).width() < 992 ) {\n      \n      if ( $('.range-slider-vertical').length ) {\n\n        $('.rating-component').toggleClass('vertical-orientation horizontal-orientation');\n      \n        $element.attr({'data-orientation' : 'horizontal'});\n\n        $handleReset = $('.range-slider').width()/2;\n        \n        $('.range-slider-handle').css({'left' : $handleReset});\n\n        $element.rangeslider('destroy');\n\n        rangeSliderInit();\n\n      }\n\n    } else {\n\n      if ( $('.range-slider-horizontal').length ) {\n\n        $('.rating-component').toggleClass('horizontal-orientation vertical-orientation');\n      \n        $element.attr({'data-orientation' : 'vertical'});\n\n        $handleReset = $('.range-slider').width()/2;\n        \n        $('.range-slider-handle').css({'left' : $handleReset});\n\n        $element.rangeslider('destroy');\n\n        rangeSliderInit();\n\n      }\n\n    }\n\n  });\n\n  if ( $(window).width() < 992 ) {\n      \n    if ( $('.range-slider-vertical').length ) {\n\n      $('.rating-component').toggleClass('vertical-orientation horizontal-orientation');\n    \n      $element.attr({'data-orientation' : 'horizontal'});\n\n      $handleReset = $('.range-slider').width()/2;\n      \n      $('.range-slider-handle').css({'left' : $handleReset});\n\n      $element.rangeslider('destroy');\n\n      rangeSliderInit();\n\n    }\n\n  }\n\n  \n\n  function rangeSliderInit() { \n\n    $element.rangeslider({\n\n      // Feature detection the default is `true`.\n      // Set this to `false` if you want to use\n      // the polyfill also in Browsers which support\n      // the native <input type=\"range\"> element.\n      polyfill: false,\n\n      // Default CSS classes\n      rangeClass: 'range-slider',\n      disabledClass: 'range-slider-disabled',\n      horizontalClass: 'range-slider-horizontal',\n      verticalClass: 'range-slider-vertical',\n      fillClass: 'range-slider-fill',\n      handleClass: 'range-slider-handle',\n      update: true,\n\n      // Callback function\n      onInit: function() {    \n\n          // Sets the value and adds the arrows to the range handle\n          $('.range-slider-handle').attr('data-value', '70').append('<span class=\"arrows\"></span>');\n\n          // If the starting value is between the min and max, \n          // make the .range-content-block active\n          $('.range-content-block').each(function(e){\n\n              $this = $(this);\n\n              if ( ( 70 > $this.data('value-min') ) && ( 70 < $this.data('value-max')) ) {\n                  \n                  $this.addClass('active');\n\n              } \n\n          });\n\n      },\n\n      // Callback function for when the range slides\n      onSlide: function(position, value) {\n          \n          // Range object, range values and range value containers\n          var $currentRange = this.$element, // Current active range\n              $currentRangeValue = this.value; // Current active ranges value\n              $newHomeValueContainer = $currentRange.closest('.range-input-container').find($('.new-home-detail .value-amount')), // New home value container\n              $oldHomeValueContainer = $currentRange.closest('.range-input-container').find($('.old-home-detail .value-amount')), // Old home value container\n              $ratingContainer = $currentRange.closest('.range-input-container').find($('.value-rating')); // HERS rating value\n          \n          // Updates the value within the range inner circle\n          this.$element.next('.range-slider').find('.range-slider-handle').attr('data-value', value);\n\n          // Updates the value within the header in the range content div\n          $ratingContainer.text(value);\n\n          // Calculates and updates the values of savings within the range content div if\n          // the value/score is \"better then\" 100. The lower the \"score\" the better\n          if ( $currentRangeValue < 100) {\n\n           var $newHomeCost = 2335, // New home \"starting cost\"\n               $newHomeScore = value*17.73247, // New home score\n               $newHomeValue = $newHomeCost - $newHomeScore, // New home cost minus scor\n               $newHomeValue = '$' + $newHomeValue.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\"); // Convert value into USD currency\n\n               $oldHomeValueContainer.text('$0'); // Sets old home value to $0\n               $newHomeValueContainer.text($newHomeValue);\n\n          } else {\n\n           var $oldHomeCost = 125, // Old home \"starting cost\"\n               $oldHomeScore = value*7.73247, // Old home score\n               $oldHomeValue = $oldHomeCost - $oldHomeScore, // Old home cost minus score\n               $oldHomeValue = '$' + $oldHomeValue.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\"); // Convert value into USD currency\n\n              $newHomeValueContainer.text('$0'); // Sets new home value to $0\n              $oldHomeValueContainer.text($oldHomeValue); // Updates value\n\n          }\n\n          // Disables/enables the text and the beginning of the ranges\n          if ( $currentRangeValue < 10) {\n\n             this.$element.next('.range-slider').addClass('disable-begin-status');\n\n          } else {\n                \n             this.$element.next('.range-slider').removeClass('disable-begin-status');\n\n          }\n\n          // Disables/enables the text and the end of the ranges\n          if ( $currentRangeValue > 140) {\n\n             this.$element.next('.range-slider').addClass('disable-end-status');\n\n          } else {\n                \n             this.$element.next('.range-slider').removeClass('disable-end-status');\n\n          }\n\n          // Removes the active class from all content wrapper pertaining \n          // the the range input being used\n          $currentRange.closest('.range-input-container').find($('.range-content-wrapper .content-block')).removeClass('active');\n\n          // Reset all pie charts to 100% or 0%\n          $currentRange.closest('.range-input-container').find($('.pie-chart')).each(function() {\n              \n            var $this = $(this),\n                $circle = $this.find('circle');\n\n            $circle.attr(\"stroke-dasharray\", \"100 100\");\n\n          });\n\n          // Reset all bar charts to 100% or 0%\n          $currentRange.closest('.range-input-container').find($('.bar-chart')).each(function() {\n\n            var $this = $(this),\n                $value = $this.data('chart-value'),\n                $rectangle = $this.find('rect');\n                $valueText = $this.find('.bar-value-text');\n            \n            $rectangle.attr({'width': '0%'});\n            $valueText.css({'left': '0%'});\n\n          });\n\n          // Adds the active class from all content wrapper pertaining \n          // the the range input being used\n          $('.range-content-block').each(function(e){\n\n            $rangeContent = $(this);\n\n            if ( ( $currentRangeValue > $rangeContent.data('value-min') ) && ( $currentRangeValue < $rangeContent.data('value-max')) ) {\n\n              $currentRange.closest('.range-input-container').find($rangeContent).addClass('active');\n\n              // Change the active content wrapper chart value to animate to value on .pie element\n              $currentRange.closest('.range-input-container').find('.pie-chart').each(function() {\n                      \n                var $this = $(this),\n                    $value = $this.data('chart-value'),\n                    $circle = $this.find('circle');\n                \n                $circle.attr(\"stroke-dasharray\", $value + \" 100\");\n\n              });\n\n              // Change the active content wrapper chart value to animate to value on .pie element\n              $currentRange.closest('.range-input-container').find('.bar-chart').each(function() {\n                      \n                var $this = $(this),\n                    $value = $this.data('chart-value'),\n                    $rectangle = $this.find('rect');\n                    $valueText = $this.find('.bar-value-text');\n                \n                $rectangle.attr({'width': $value+'%'});\n                $valueText.css({'left': $value+'%'});\n\n              });\n\n            } \n\n          });\n\n\n      },\n\n      // Callback function for when the range ends changing positions\n      onSlideEnd: function(position, value) {\n\n      }\n\n    });\n\n  }\n\n  \n\n\n\n  \n\n  // ==============================================================*/\n  // Chart generation init\n  // ==============================================================*/\n\n  function createSvgEl(tag) {\n\n      return document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n  }\n\n  $('.pie-chart').each(function() {\n\n    var $this = $(this),\n      value = $this.data('chart-value');\n\n    var svg = createSvgEl('svg');\n    var circle = createSvgEl('circle');\n    var title = createSvgEl('title');\n\n    circle.setAttribute(\"r\", \"16\");\n    circle.setAttribute(\"cx\", \"16\");\n    circle.setAttribute(\"cy\", \"16\");\n    circle.setAttribute(\"stroke-dasharray\", \"100 100\");\n\n    svg.setAttribute(\"viewBox\", \"0 0 32 32\");\n    svg.append(title);\n    svg.append(circle);\n    $this.append(svg);\n\n    setTimeout(function(){ \n      circle.setAttribute(\"stroke-dasharray\", value + \" 100\");\n    }, 100);\n\n  });\n\n  $('.bar-chart').each(function() {\n    \n    var $this = $(this),\n        value = $this.data('chart-value'),\n        valueText = $this.find('.bar-value-text');\n\n    var svg = createSvgEl('svg');\n    var rectangle = createSvgEl('rect');\n    var title = createSvgEl('title');\n    \n    rectangle.setAttribute(\"height\", \"100%\");\n    rectangle.setAttribute(\"width\", \"0\");\n    \n    svg.append(title);\n    svg.append(rectangle);\n    $this.append(svg);\n    \n    // setTimeout(function(){ \n    //  rectangle.setAttribute(\"width\", value+'%' );\n    //  valueText.css({'left': value+'%'});\n    // }, 100);\n\n  });\n\n  // ==============================================================*/\n  // Features Carousels\n  // ==============================================================*/\n\n  $('.features-section .slides-wrapper').slick({\n    slide: '.slide',\n    arrows: false,\n    adaptiveHeight: true,\n    asNavFor: '.features-section .slides-navigation-wrapper ul'\n  });\n\n  $('.features-section .slides-navigation-wrapper ul').slick({\n    asNavFor: '.features-section .slides-wrapper',\n    dots: false,\n    focusOnSelect: true,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    arrows: false,\n    responsive: [\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          dots: false,\n          centerMode: false,\n        }\n      },\n      {\n        breakpoint: 420,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          dots: false,\n          centerMode: true,\n        }\n      }\n    ]\n  });\n\n  // ==============================================================*/\n  // Glossary Carousel\n  // ==============================================================*/\n\n  $('.glossary-section .slides-wrapper').slick({\n    slide: '.slide',\n    arrows: true,\n    adaptiveHeight: true,\n    infinite: true,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    prevArrow: '.glossary-section .previous-arrow',\n    nextArrow: '.glossary-section .next-arrow',\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          dots: false\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 420,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          dots: true\n        }\n      }\n    ]\n  });\n\n  $('.card-slide .card-footer a').on('click', function(e){\n    \n    e.preventDefault();\n    \n    if( $(this).closest('.card-slide').hasClass('active-card') ) {\n      \n      $(this).closest('.card-slide').toggleClass('active-card');\n\n    } else {\n\n      $('.card-slide').removeClass('active-card');\n      \n      $(this).closest('.card-slide').addClass('active-card');\n\n    }\n\n  }); \n\n  // ==============================================================*/\n  // Multimedia carousels\n  // ==============================================================*/\n\n  $('.media-carousel').each(function(){\n    \n    $this = $(this);\n\n    var $currentSlider = $('.slides-wrapper', $this).slick({\n      slide: '.slide',\n      lazyLoad: 'progressive',\n      adaptiveHeight: true,\n      prevArrow: '.media-carousel .previous-arrow',\n      nextArrow: '.media-carousel .next-arrow',\n    });\n\n    // Updates the slide numbers\n    $('.slides-wrapper', $this).on('init reInit afterChange', function(event, slick, currentSlide, nextSlide){\n      $status = $('.slide-numbers .current-slide-number');\n      $total = $('.slide-numbers .total-slide-number');\n      var i = (currentSlide ? currentSlide : 0) + 1;\n      $status.text(i);\n      $total.text(slick.slideCount);\n    });\n\n    // Removes the iFrame/video from playing\n    $('.slides-wrapper', $this).on('beforeChange', function(event, slick, currentSlide, nextSlide){\n\n      $('.slide').removeClass('active-video');\n\n      $('.slick-current').find('iframe').fadeOut(300, function() { \n       \n        $(this).remove(); \n\n      });\n\n    });\n\n    // \"Launches\" the modal and goes to that slide\n    $('.grid-item').on('click', function(e){\n    \n        e.preventDefault();\n        \n        $('body').addClass('active-media-modal');\n\n        $slideIndex = $(this).index('.grid-item');\n\n        $currentSlider.slick('slickGoTo', $slideIndex, true);\n        \n    });\n\n    // Loads in the video (NEED TO DO ALL IFRAME FUNCTIONALITY)\n    $('.play-button').on('click', function(e){\n      \n      e.preventDefault();\n\n      $playButton = $(this);\n\n      $playButton.closest('.slide').addClass('active-video');\n\n      $videoData = $playButton.data('video');\n\n      $('<iframe src=\"'+$videoData+'?autoplay=1\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>').insertBefore($playButton);\n    });\n\n  });\n\n  // Closes the modal when the overlay or close buttons is clicked\n  $('.section-overlay, .close-button').on('click', function(e){\n    \n      e.preventDefault();\n      \n      $('body').removeClass('active-media-modal');\n\n      if ( $('.slick-current iframe').length ) {\n\n          $('.slide').removeClass('active-video');\n\n          $('.slick-current').find('iframe').fadeOut(300, function() { \n           \n            $(this).remove(); \n\n          });\n\n        }\n      \n  });\n\n  // Closes the modal when the esc button is pressed\n  $(document).keyup(function(e){\n\n    if ( $('.active-media-modal').length ) {\n      \n      if(e.keyCode==27){\n        \n        e.preventDefault();\n        \n        $('body').removeClass('active-media-modal');\n\n        if ( $('.slick-current iframe').length ) {\n\n          $('.slide').removeClass('active-video');\n\n          $('.slick-current').find('iframe').fadeOut(300, function() { \n           \n            $(this).remove(); \n\n          });\n\n        }\n      }\n\n    }\n\n  });\n\n\n  // ==============================================================*/\n  // Section triggers via scrollmonitor.js and scrollToLink plugin\n  // ==============================================================*/\n\n  scrollToLinks();\n\n  var $section = $('.section'),\n    $nav = $('.navigation');\n\n  $section.each(function(index, section) {\n      \n    var sectionWatcher = scrollMonitor.create(section)\n\n    // Sets the current nav location on load\n    if ( sectionWatcher.height > 20 && sectionWatcher.isFullyInViewport ) {\n\n      $nav.find('a[href=\"#'+section.id+'\"]').addClass('current-nav');\n\n    }\n    \n    sectionWatcher.stateChange( function() {\n      \n      // If the section is larger then 20 pixels, \n      // the top of the section it below the top of the viewport\n      // and the top of it is less then the height of the space it takes up\n      if ( ( sectionWatcher.height > 20 ) && ( sectionWatcher.top >= scrollMonitor.viewportTop ) && ( sectionWatcher.top <= ( sectionWatcher.top + ( sectionWatcher.height ) ) ) ) {\n\n        $('.section').removeClass('current-section');\n        section.classList.add('current-section');\n\n        if ( !$('body').hasClass('moving') ) {\n\n          $nav.find('a').removeClass('current-nav');\n          $nav.find('a[href=\"#'+section.id+'\"]').addClass('current-nav');\n\n        }\n\n      } else {\n\n        section.classList.remove('current-section');\n\n      }\n\n      \n    })\n\n  });\n\n  // ==============================================================*/\n  // Chart animation when scrolled to via scrollmonitor.js\n  // ==============================================================*/\n\n  var barCharts = $('.bar-chart-component').map(function(i, element) {\n\n    var barCharts = scrollMonitor.create( element );\n\n    barCharts.lock();\n\n    // Sets the bar chart state if in viewport on load\n    if ( barCharts.isFullyInViewport ) {\n\n      $('.bar-chart').each(function() {\n\n        var $this = $(this),\n          value = $this.data('chart-value'),\n          valueText = $this.find('.bar-value-text'),\n          rectangle = $this.find('svg rect');\n\n        setTimeout(function(){\n          rectangle.attr({'width': value+'%'});\n          valueText.css({'left': value+'%'});\n        }, 250);\n\n      });\n\n    }\n\n    // Sets the bar chart state if in viewport on change of viewport/scrolling\n    barCharts.fullyEnterViewport(function() {\n\n      $('.bar-chart').each(function() {\n\n        var $this = $(this),\n          value = $this.data('chart-value'),\n          valueText = $this.find('.bar-value-text'),\n          rectangle = $this.find('svg rect');\n\n        setTimeout(function(){\n          rectangle.attr({'width': value+'%'});\n          valueText.css({'left': value+'%'});\n        }, 100);\n      });\n\n    });\n\n    return barCharts;\n\n  });\n\n  // ==============================================================*/\n  // Tabs component\n  // ==============================================================*/\n\n  $('.tabs-component').each(function(){\n\n    var $component = $(this),\n      $tabList = $component.find('.tab-list'),\n      $tabPanel = $component.find('.tab-panel'),\n      $tab = $component.find('.tab-list .button'),\n      $panelLabel = $component.find('.panel-label');\n\n    // Activates the first tab if larger then 768\n    if ( $(window).width() > 768 ) {\n\n      $tab.first().attr({\"aria-selected\": \"true\"}).addClass('active-tab');\n      $tabPanel.first().attr({\"aria-hidden\": \"true\"}).addClass('active-content');\n\n    }\n\n    // Resets the bar charts when hovering a inactive tab\n    $tab.on('mouseenter', function(e){\n\n      e.preventDefault();\n\n      var $this = $(this),\n        $tabIndex = $this.index(),\n        $tabTarget = $tabPanel.eq($tabIndex);\n\n      $('.tab-panel:not(.active-content)').find('.bar-chart').each(function() {\n\n        var $this = $(this),\n          value = $this.data('chart-value'),\n          valueText = $this.find('.bar-value-text'),\n          rectangle = $this.find('svg rect');\n        \n        rectangle.attr({'width': '0%'});\n        valueText.css({'left': '0%'});\n\n      });\n\n    });\n\n    // Active tab trigger w/ bar charts\n    $tab.on('click', function(e){\n\n      e.preventDefault();\n\n      var $this = $(this),\n        $tabIndex = $this.index(),\n        $tabTarget = $tabPanel.eq($tabIndex);\n\n      $tab.attr({\"aria-selected\": \"false\"}).removeClass('active-tab');\n      $this.attr({\"aria-selected\": \"true\"}).addClass('active-tab');\n\n      $tabPanel.attr({\"aria-hidden\": \"false\"}).removeClass('active-content');\n      $tabTarget.attr({\"aria-hidden\": \"true\"}).addClass('active-content');\n\n      $tabTarget.find('.bar-chart').each(function() {\n\n        var $this = $(this),\n          value = $this.data('chart-value'),\n          valueText = $this.find('.bar-value-text'),\n          rectangle = $this.find('svg rect');\n\n        rectangle.attr({'width': value+'%'});\n        valueText.css({'left': value+'%'});\n\n      });\n\n    });\n\n    // Active panel trigger for mobile state\n    $panelLabel.on('click', function(e){\n\n      e.preventDefault();\n\n      var $this = $(this),\n        $labelTarget = $this.closest($tabPanel);\n\n      if( $labelTarget.hasClass('active-content') ) {\n\n        $labelTarget.attr({\"aria-hidden\": \"false\"}).removeClass('active-content');\n\n      } else {\n\n        $tabPanel.attr({\"aria-hidden\": \"false\"}).removeClass('active-content');\n        $labelTarget.attr({\"aria-hidden\": \"true\"}).addClass('active-content');\n\n        // Goes to the clicked item\n              setTimeout(function(){\n\n                // $headerHeight = $('.site-header').outerHeight();\n                $headerHeight = 50;\n                  \n                  $('html, body').animate({\n                      scrollTop:$this.offset().top-$headerHeight\n                  }, 300);\n\n              }, 300);\n\n      }\n\n    });\n\n  });\n\n  // ==============================================================*/\n  // Show more/less grid\n  // ==============================================================*/\n\n  $('.gallery-section .grid-container').last().hide();\n\n  $('.view-option-container a').on('click', function(e) {\n\n    e.preventDefault();\n\n    $(this).toggleClass('active-button');\n\n    if( $(this).hasClass('active-button') ) {\n\n      $(this).find('.button-text').text('See Less')\n\n    } else {\n\n      $(this).find('.button-text').text('See More')\n\n    }\n\n    $('.gallery-section .grid-container').last().slideToggle();\n\n\n  });\n\n  // ==============================================================*/\n  // Brower full screen functions\n  // ==============================================================*/\n\n  // mozfullscreenerror event handler\n  function errorHandler() {\n    alert('mozfullscreenerror');\n  }\n  document.documentElement.addEventListener('mozfullscreenerror', errorHandler, false);\n\n  // toggle full screen\n  function toggleFullScreen() {\n\n    if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) { \n\n      if (document.documentElement.requestFullscreen) {\n\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n\n        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      }\n    } else {\n\n      if (document.cancelFullScreen) {\n\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n\n        document.webkitCancelFullScreen();\n      }\n\n    }\n\n  }\n\n  $('.fullscreen-button').on('click', function(e){\n\n    e.preventDefault();\n\n    toggleFullScreen();\n\n  });\n\n  // keydown event handler\n  document.addEventListener('keydown', function(e) {\n\n    if (e.keyCode == 13 || e.keyCode == 70) { // F or Enter key\n\n      toggleFullScreen();\n    }\n\n  }, false);\n\n});"]}